	.globl _main
_main:
	pushq	%rbp
	movq	%rsp, %rbp
	subq	$288, %rsp
	movq	$1, %rbx
	movq	$2, %rcx
	movq	$3, %rdx
	movq	$4, %rsi
	movq	$5, %rdi
	movq	$6, %r8
	movq	$7, %r9
	movq	$8, %r10
	movq	$9, %r12
	movq	$10, %r13
	movq	$11, %r14
	movq	$12, 0(%rbp)
	movq	$13, -8(%rbp)
	movq	$14, -16(%rbp)
	movq	$15, -24(%rbp)
	movq	$16, -40(%rbp)
	movq	$17, -48(%rbp)
	movq	$18, -32(%rbp)
	movq	-48(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	-48(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-40(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-48(%rbp), %rax
	addq	-32(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-24(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-32(%rbp), %rax
	addq	-48(%rbp), %rax
	movq	%rax, -48(%rbp)
	movq	-16(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-48(%rbp), %rax
	addq	-32(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	-32(%rbp), %rax
	addq	-8(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	0(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	-8(%rbp), %rax
	addq	-32(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	%r14, -8(%rbp)
	movq	-32(%rbp), %rax
	addq	-8(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	%r13, -32(%rbp)
	movq	-8(%rbp), %rax
	addq	-32(%rbp), %rax
	movq	%rax, -32(%rbp)
	movq	%r12, -8(%rbp)
	movq	-32(%rbp), %rax
	addq	-8(%rbp), %rax
	movq	%rax, -8(%rbp)
	movq	%r10, %r12
	addq	-8(%rbp), %r12
	movq	%r9, -8(%rbp)
	addq	%r12, -8(%rbp)
	movq	%r8, %r12
	addq	-8(%rbp), %r12
	movq	%rdi, -8(%rbp)
	addq	%r12, -8(%rbp)
	movq	%rsi, %r12
	addq	-8(%rbp), %r12
	movq	%rdx, -8(%rbp)
	addq	%r12, -8(%rbp)
	movq	%rcx, %r12
	addq	-8(%rbp), %r12
	movq	%rbx, -8(%rbp)
	addq	%r12, -8(%rbp)
	movq	-8(%rbp), %rax
	movq	%rax, %rdi
	callq	_write_int
	movq	$0, %rax
	addq	$288, %rsp
	popq	%rbp
	retq
